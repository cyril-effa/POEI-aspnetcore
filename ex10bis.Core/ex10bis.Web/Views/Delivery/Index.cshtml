@using ex10bis.Core.Entities
@model IEnumerable<Delivery>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form method="get" asp-action="Index" class="mb-3">
    <label for="selectedLivreurId" class="form-label">Sélectionner un livreur :</label>
    <select id="selectedLivreurId" name="selectedLivreurId" class="form-select" onchange="this.form.submit()">
        <option value="">-- Tous les livreurs --</option>
        @foreach (var livreur in (IEnumerable<SelectListItem>)ViewBag.Livreurs)
        {
            <option value="@livreur.Value" selected="@(livreur.Value == (string)ViewBag.SelectedLivreurId ? "selected" : null)">
                @livreur.Text
            </option>
        }
    </select>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LivreurId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

@{
    var orderStatuses = (IDictionary<int, OrderStatus>)ViewBag.OrderStatuses;
}
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrderId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LivreurId)
            </td>
            <td>
                @if (orderStatuses.ContainsKey(item.OrderId) && orderStatuses[item.OrderId] == OrderStatus.Shipped)
                {
                    <a asp-action="ConfirmerLivraison" asp-route-id="@item.Id">Confirmer la livraison</a>
                    <a asp-action="AnnulerLivraison" asp-route-id="@item.Id">Annuler la livraison</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
